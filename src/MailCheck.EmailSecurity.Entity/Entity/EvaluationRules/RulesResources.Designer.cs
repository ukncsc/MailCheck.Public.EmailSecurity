//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MailCheck.EmailSecurity.Entity.Entity.EvaluationRules {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class RulesResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal RulesResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MailCheck.EmailSecurity.Entity.Entity.EvaluationRules.RulesResources", typeof(RulesResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You will be losing incoming emails: None of the mail servers listed in your MTA-STS policy meet the minimum standard by supporting TLS 1.2 and presenting a valid certificate..
        /// </summary>
        internal static string EnforceNoneError {
            get {
                return ResourceManager.GetString("EnforceNoneError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You will be losing incoming emails: None of the mail servers listed in your MTA-STS policy meet the minimum standard by supporting TLS 1.2 and presenting a valid certificate. If the problem can&apos;t be solved quickly, consider changing your policy back to testing..
        /// </summary>
        internal static string EnforceNoneErrorMarkdown {
            get {
                return ResourceManager.GetString("EnforceNoneErrorMarkdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of your mail servers listed in your MTA-STS policy does not meet the minimum standard by supporting TLS 1.2 and presenting a valid certificate..
        /// </summary>
        internal static string EnforceSomeError {
            get {
                return ResourceManager.GetString("EnforceSomeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of your mail servers listed in your MTA-STS policy does not meet the minimum standard by supporting TLS 1.2 and presenting a valid certificate. You should fix this as soon as possible..
        /// </summary>
        internal static string EnforceSomeErrorMarkdown {
            get {
                return ResourceManager.GetString("EnforceSomeErrorMarkdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are ready to change your policy to &quot;enforce&quot;..
        /// </summary>
        internal static string GoToEnforce {
            get {
                return ResourceManager.GetString("GoToEnforce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have a correctly configured MTA-STS policy and all mail servers listed are presenting good certificates and support TLS 1.2. You are ready to change your policy to &quot;enforce&quot; in order to protect inbound emails..
        /// </summary>
        internal static string GoToEnforceMarkdown {
            get {
                return ResourceManager.GetString("GoToEnforceMarkdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None of the MX hosts listed in your policy file match the hosts found in your DNS MX records..
        /// </summary>
        internal static string NoMatchingMx {
            get {
                return ResourceManager.GetString("NoMatchingMx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are at risk of not receiving email as the inbound sending SMTP servers will only trust the MX hosts listed in your MTA-STS policy file.
        ///
        ///Hosts found in your MX DNS records: {0}
        ///
        ///Hosts found in your MTA-STS policy file: {1}
        ///
        ///Please ensure that hosts denoted with mx: in your policy file match what was found in your MX DNS records..
        /// </summary>
        internal static string NoMatchingMxMarkdown {
            get {
                return ResourceManager.GetString("NoMatchingMxMarkdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MTA-STS not configured. TLS email encryption is vulnerable to downgrade attacks. First step: set up an MTA-STS ‘testing’ policy..
        /// </summary>
        internal static string NoMtsStsError {
            get {
                return ResourceManager.GetString("NoMtsStsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mail Transfer Agent Strict Transport Security (MTA-STS) is a protocol that allows a domain to advertise the capability to receive emails using Transport Layer Security (TLS) 1.2 or higher. This then allows a sending email service to safely enforce encryption, without the risk of losing emails.
        ///[Further information about MTA-STS](https://www.ncsc.gov.uk/collection/email-security-and-anti-spoofing/using-mta-sts-to-protect-the-privacy-of-your-emails).
        /// </summary>
        internal static string NoMtsStsErrorMarkdown {
            get {
                return ResourceManager.GetString("NoMtsStsErrorMarkdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No MTA-STS configured, but no action required as we did not detect a mail host for this domain (no MX record)..
        /// </summary>
        internal static string NoMxAndNoMtaSts {
            get {
                return ResourceManager.GetString("NoMxAndNoMtaSts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not all of the MX hosts listed in your policy file match the hosts found in your DNS MX records.
        /// </summary>
        internal static string SomeMatchingMx {
            get {
                return ResourceManager.GetString("SomeMatchingMx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are at risk of not receiving email as the inbound sending SMTP servers will only trust the MX hosts listed in your MTA-STS policy file.
        ///
        ///Hosts found in your MX DNS records: {0}
        ///
        ///Hosts found in your MTA-STS policy file: {1}
        ///
        ///Please ensure that hosts denoted with mx: in your policy file match what was found in your MX DNS records..
        /// </summary>
        internal static string SomeMatchingMxMarkdown {
            get {
                return ResourceManager.GetString("SomeMatchingMxMarkdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None of your mail servers listed in your MTA-STS policy meet the minimum standard by supporting TLS 1.2 and presenting a valid certificate..
        /// </summary>
        internal static string TestingNoneError {
            get {
                return ResourceManager.GetString("TestingNoneError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None of your mail servers listed in your MTA-STS policy meet the minimum standard by supporting TLS 1.2 and presenting a valid certificate. Do not change your policy to enforce mode otherwise emails will be lost..
        /// </summary>
        internal static string TestingNoneErrorMarkdown {
            get {
                return ResourceManager.GetString("TestingNoneErrorMarkdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more of your mail servers listed in your MTA-STS policy does not meet the minimum standard by supporting TLS 1.2 and presenting a valid certificate..
        /// </summary>
        internal static string TestingSomeError {
            get {
                return ResourceManager.GetString("TestingSomeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more of your mail servers listed in your MTA-STS policy does not meet the minimum standard by supporting TLS 1.2 and presenting a valid certificate. Fix this before moving to enforce..
        /// </summary>
        internal static string TestingSomeErrorMarkdown {
            get {
                return ResourceManager.GetString("TestingSomeErrorMarkdown", resourceCulture);
            }
        }
    }
}
